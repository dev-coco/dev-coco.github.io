// 切换目录
window.addEventListener('hashchange', function (event) {
  if (event.newURL.indexOf('#') > -1) {
    document.getElementById('frameContent').src = `/Excel/Resource/${event.newURL.replace(/.+#/g, '')}.html`
  }
})

// 判断链接切换页面
window.onload = function () {
  if (location.href.indexOf('#') > -1) {
    document.getElementById('frameContent').src = `/Excel/Resource/${location.href.replace(/.+#/g, '')}.html`
  }
}

// 初始化搜索内容
new autoComplete({
  selector: '#search',
  minChars: 1,
  source: function (term, suggest) {
    term = term.toLowerCase()
    const choices = [
      '算数运算符',
      '比较运算符',
      '文本连接运算符',
      '引用运算符',
      '其它运算符',
      '运算符优先级',
      '数据类型',
      '错误类型',
      '公式标准样式',
      '常用术语',
      '条件格式 — 根据条件更改单元格的外观',
      '数据验证 — 限制和规范用户填写数据',
      '筛选器 — 筛选或者过滤指定的数据',
      '图表 — 更直观的呈现数据的变化',
      '数据透视表 — 把一个范围的数据根据字段重新排版统计数据',
      '多函数嵌套与理解',
      '性能优化 — 优化表格的加载速度',
      '数据填写检测',
      '实时表格监控',
      'COUNTA — 计算范围中不为空的单元格数量',
      'AVERAGE — 计算指定范围的平均数，会自动忽略文本',
      'COUNT — 计算指定范围数值内容的单元格数量',
      'COUNTIF — 用于统计满足一种条件的单元格数量',
      'COUNTIFS — 用于统计满足多种条件的单元格数量',
      'MAX - 返回范围内的最大值',
      'MIN — 返回范围内的最小值',
      'SUM — 单元格或者一个范围的单元格相加的总和',
      'SUMIF — 对指定范围设置一个条件计算总和',
      'SUMIFS — 对指定范围设置多个条件计算总和',
      'SUMPRODUCT — 计算两个大小相同的数组或范围中的内容进行计算',
      'FIND — 搜索字符串在文本中首次出现的位置',
      'FILTER — 根据范围返回满足指定条件的行和列',
      'INDEX — 根据行和列偏移返回指定范围的内容',
      'INDIRECT — 以字符串的形式引用单元格',
      'MATCH — 在范围内根据特定的条件搜索',
      'OFFSET — 指定单元格开始计算偏移的行或者列数',
      'QUERY — 使用 SQL 语法对数据进行查询',
      'SORT — 在范围中对一列或者多列进行排序',
      'VLOOKUP — 从上到下按行正向查找某个值',
      'EQ — 如果指定的值相等，返回TRUE，否则返回FALSE',
      'AND — 当所有条件条件为TRUE时，返回TRUE，如果有任何一个条件为FALSE，则返回FALSE',
      'DATEDIF — 计算两个日期之间的天数、月数和年数',
      'GT — 判断第一个值是否大于第二个值',
      'IF — 判断一个条件的结果，自定义TRUE和FALSE返回值的输出结果',
      'IFERROR — 如果第一个值没有出错，就返回第一个值，如果出错返回第二个值',
      'IFNA — 如果指定的内容结果是#N/A错误，则返回指定的值',
      'IFS — 判断多个条件，返回条件为TRUE的值',
      'ISERR — 判断是否是#N/A以外的错误',
      'NOT — 返回某布尔值的相反值',
      'OR — 参数中任何一个条件为TRUE就返回TURE，如果所有的参数条件返回FALSE则返回FALSE',
      'SWITCH — 多个条件匹配，返回条件为TRUE的值',
      'RIGHT — 从指定文本的右边提取文本',
      'CHAR — 按照十进制Unicode编码转换为对应字符',
      'CONCATENATE — 将一个文本追加到另外一个文本的后面',
      'JOIN — 设置一个文本间隔开每一个值',
      'LEFT — 从指定文本的左边提取文本',
      'LEN — 返回文本的长度',
      'MID — 返回指定文本中的特定文本长度',
      'REGEXEXTRACT — 从一个字符串中据正则表达式提取匹配到的第一个字符串',
      'REGEXMATCH — 判读一个字符串是否和正则表达式相匹配',
      'REGEXREPLACE — 使用正则表达式将文本字符串中的一部分替换为其他文本字符串',
      'REPT — 将指定文本多次重复',
      'SPLIT — 指定字符拆分文本',
      'SUBSTITUTE — 将现有文本替换为字符串中的新文本',
      'T — 只会返回引用文本的内容和错误值，如果是其它格式的内容则返回空文本',
      'TEXT — 按照指定格式将数字转换成文本',
      'TEXTJOIN — 将多个字符串或范围的文本组合起来，用分隔符间隔',
      'TO_PERCENT — 将数字转换成百分比',
      'TO_TEXT — 把指定的内容返回文本格式',
      'VALUE — 日期、 时间、数字格式的字符串转换成数字',
      'DAY — 以日期格式返回当前日期天数',
      'HOUR — 以数字格式返回指定时间的小时',
      'ISDATE_STRICT — 使用严格模式判断指定的内容是否是日期格式',
      'ISDATE — 判断指定的内容是否是日期格式',
      'MINUTE — 以数字格式返回指定时间的分钟',
      'MONTH — 以数字格式返回指定日期的月份',
      'NOW — 以日期格式返回当前的日期和时间',
      'SECOND — 以数字格式返回指定时间的秒',
      'TIME — 将指定的小时、分钟和秒转换成时间格式',
      'TODAY — 以日期格式返回当前日期',
      'YEAR — 以数字格式返回指定日期的年份',
      'GOOGLETRANSLATE — 把文本翻译成另外一种语言',
      'ADDRESS — 返回指定单元格的行数',
      'ARRAYFORMULA — 在多行或者多列数组输出返回值',
      'COLUMN — 返回指定单元格的列数',
      'ENCODEURL — 对文本进行URL编码',
      'FLATTEN — 将函数以文本格式返回',
      'FORMULATEXT — 以文本格式返回公式',
      'HYPERLINK — 在单元格创建一个超链接',
      'IMAGE — 在单元格内容插入一张图片',
      'IMPORTRANGE — 从其它表格导入指定范围的内容',
      'IMPORTXML — 使用XPath语法对指定链接查询数据',
      'ROW — 返回指定单元格的行数',
      'TRANSPOSE — 将范围行列进行转置',
      'UNIQUE — 返回在范围中唯一值，移除重复内容'
    ]
    const suggestions = []
    for (let i = 0; i < choices.length; i++) { if (~choices[i].toLowerCase().indexOf(term)) suggestions.push(choices[i]) }
    suggest(suggestions)
  }
})

// 定义目录
const searchList = {
  算数运算符: 'Basic-Core/Operators/Arithmetic-Operators',
  比较运算符: 'Basic-Core/Operators/Comparison-Operators',
  文本连接运算符: 'Basic-Core/Operators/Text-Join-Operators',
  引用运算符: 'Basic-Core/Operators/Reference-Operators',
  其它运算符: 'Basic-Core/Operators/Other-Operators',
  运算符优先级: 'Basic-Core/Operators/Priority',
  数据类型: 'Basic-Core/Data-Type/Data-Type',
  错误类型: 'Basic-Core/Data-Type/Error-Type',
  公式标准样式: 'Basic-Core/Formula-Standard',
  常用术语: 'Basic-Core/Terminology',
  条件格式: 'Other/Other-Features/Conditional-Format',
  数据验证: 'Other/Other-Features/Data-Validation',
  筛选器: 'Other/Other-Features/Filter',
  图表: 'Other/Other-Features/Chart',
  数据透视表: 'Other/Other-Features/Pivot-Table',
  多函数嵌套与理解: 'Other/Advanced-Content/Multiple-Function-Nesting',
  性能优化: 'Other/Advanced-Content/Performance',
  数据填写检测: 'Other/Example/Data-Filling-Detection',
  实时表格监控: 'Other/Example/Sheet-Monitoring',
  COUNTA: 'Function/Operations/COUNTA',
  AVERAGE: 'Function/Operations/AVERAGE',
  COUNT: 'Function/Operations/COUNT',
  COUNTIF: 'Function/Operations/COUNTIF',
  COUNTIFS: 'Function/Operations/COUNTIFS',
  MAX: 'Function/Operations/MAX',
  MIN: 'Function/Operations/MIN',
  SUM: 'Function/Operations/SUM',
  SUMIF: 'Function/Operations/SUMIF',
  SUMIFS: 'Function/Operations/SUMIFS',
  SUMPRODUCT: 'Function/Operations/SUMPRODUCT',
  FIND: 'Function/Find-Filter/FIND',
  FILTER: 'Function/Find-Filter/FILTER',
  INDEX: 'Function/Find-Filter/INDEX',
  INDIRECT: 'Function/Find-Filter/INDIRECT',
  MATCH: 'Function/Find-Filter/MATCH',
  OFFSET: 'Function/Find-Filter/OFFSET',
  QUERY: 'Function/Find-Filter/QUERY',
  SORT: 'Function/Find-Filter/SORT',
  VLOOKUP: 'Function/Find-Filter/VLOOKUP',
  EQ: 'Function/Logical-Judgments/EQ',
  AND: 'Function/Logical-Judgments/AND',
  DATEDIF: 'Function/Logical-Judgments/DATEDIF',
  GT: 'Function/Logical-Judgments/GT',
  IF: 'Function/Logical-Judgments/IF',
  IFERROR: 'Function/Logical-Judgments/IFERROR',
  IFNA: 'Function/Logical-Judgments/IFNA',
  IFS: 'Function/Logical-Judgments/IFS',
  ISERR: 'Function/Logical-Judgments/ISERR',
  NOT: 'Function/Logical-Judgments/NOT',
  OR: 'Function/Logical-Judgments/OR',
  SWITCH: 'Function/Logical-Judgments/SWITCH',
  RIGHT: 'Function/Text-Processing/RIGHT',
  CHAR: 'Function/Text-Processing/CHAR',
  CONCATENATE: 'Function/Text-Processing/CONCATENATE',
  JOIN: 'Function/Text-Processing/JOIN',
  LEFT: 'Function/Text-Processing/LEFT',
  LEN: 'Function/Text-Processing/LEN',
  MID: 'Function/Text-Processing/MID',
  REGEXEXTRACT: 'Function/Text-Processing/REGEXEXTRACT',
  REGEXMATCH: 'Function/Text-Processing/REGEXMATCH',
  REGEXREPLACE: 'Function/Text-Processing/REGEXREPLACE',
  REPT: 'Function/Text-Processing/REPT',
  SPLIT: 'Function/Text-Processing/SPLIT',
  SUBSTITUTE: 'Function/Text-Processing/SUBSTITUTE',
  T: 'Function/Text-Processing/T',
  TEXT: 'Function/Text-Processing/TEXT',
  TEXTJOIN: 'Function/Text-Processing/TEXTJOIN',
  TO_PERCENT: 'Function/Text-Processing/TO_PERCENT',
  TO_TEXT: 'Function/Text-Processing/TO_TEXT',
  VALUE: 'Function/Text-Processing/VALUE',
  DAY: 'Function/Date/DAY',
  HOUR: 'Function/Date/HOUR',
  ISDATE_STRICT: 'Function/Date/ISDATE_STRICT',
  ISDATE: 'Function/Date/ISDATE',
  MINUTE: 'Function/Date/MINUTE',
  MONTH: 'Function/Date/MONTH',
  NOW: 'Function/Date/NOW',
  SECOND: 'Function/Date/SECOND',
  TIME: 'Function/Date/TIME',
  TODAY: 'Function/Date/TODAY',
  YEAR: 'Function/Date/YEAR',
  GOOGLETRANSLATE: 'Function/Others/GOOGLETRANSLATE',
  ADDRESS: 'Function/Others/ADDRESS',
  ARRAYFORMULA: 'Function/Others/ARRAYFORMULA',
  COLUMN: 'Function/Others/COLUMN',
  ENCODEURL: 'Function/Others/ENCODEURL',
  FLATTEN: 'Function/Others/FLATTEN',
  FORMULATEXT: 'Function/Others/FORMULATEXT',
  HYPERLINK: 'Function/Others/HYPERLINK',
  IMAGE: 'Function/Others/IMAGE',
  IMPORTRANGE: 'Function/Others/IMPORTRANGE',
  IMPORTXML: 'Function/Others/IMPORTXML',
  ROW: 'Function/Others/ROW',
  TRANSPOSE: 'Function/Others/TRANSPOSE',
  UNIQUE: 'Function/Others/UNIQUE'
}

// 切换页面
function search () {
  const contenet = document.getElementById('search').value
  if (searchList[contenet]) {
    document.getElementById('frameContent').src = `/Excel/Resource/${searchList[contenet]}.html`
  }
}
